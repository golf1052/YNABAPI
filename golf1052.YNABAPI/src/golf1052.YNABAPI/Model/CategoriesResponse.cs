/* 
 * YNAB API Endpoints
 *
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.youneedabudget.com
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = golf1052.YNABAPI.Client.SwaggerDateConverter;

namespace golf1052.YNABAPI.Model
{
    /// <summary>
    /// CategoriesResponse
    /// </summary>
    [DataContract]
    public partial class CategoriesResponse
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CategoriesResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CategoriesResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CategoriesResponse" /> class.
        /// </summary>
        /// <param name="data">data (required).</param>
        public CategoriesResponse(List<CategoryGroupWithCategories> categoryGroups = default)
        {
            // to ensure "data" is required (not null)
            if (categoryGroups == null)
            {
                throw new InvalidDataException("data is a required property for CategoriesResponse and cannot be null");
            }
            else
            {
                this.CategoryGroups = categoryGroups;
            }
        }
        
        /// <summary>
        /// Gets or Sets Data
        /// </summary>
        [DataMember(Name="category_groups", EmitDefaultValue=false)]
        public List<CategoryGroupWithCategories> CategoryGroups { get; set; }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }
    }
}
